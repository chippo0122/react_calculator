{"version":3,"sources":["components/Output/index.jsx","components/Button/index.jsx","components/LongButton/index.jsx","components/Panel/index.jsx","components/Background/index.jsx","App.jsx","index.jsx"],"names":["Output","props","output","useRef","currentSum","store","isUpdate","useEffect","current","classList","add","setTimeout","remove","console","log","ref","style","wordWrap","className","index","children","bg","func","onClick","backgroundColor","color","Panel","useState","red","white","gray","setIsUpdate","point","setPoint","setStore","queue","setQueue","leng","length","num1","num2","sign","sum","cal","psuhQueue","Number","updateStore","num","newItem","toString","positive","Math","abs","Background","wraper","boxes","setBoxes","clientHeight","clientWidth","boxList","total","width","height","list","i","data","floor","random","scale","posX","posY","push","buildBoxList","map","el","transform","left","top","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22de2a46.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react'\r\nimport './index.scss'\r\n\r\nexport default function Output(props) {\r\n    const output = useRef();\r\n    const {currentSum, store, isUpdate} = props;\r\n\r\n    useEffect(() => {\r\n        output.current.classList.add('move');\r\n        setTimeout(() => {\r\n            output.current.classList.remove('move');\r\n        }, 100);\r\n        console.log('call');\r\n    }, [currentSum, store])\r\n\r\n    return (\r\n        <div ref={output} style={{wordWrap:'break-word'}} className=\"output px-2 display-1 text-end text-light\">\r\n            {\r\n                isUpdate ? \r\n                currentSum :\r\n                store\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nexport default function index(props) {\r\n    const {children, bg, func} = props;\r\n\r\n    return (\r\n        <button onClick={func} style={{backgroundColor: bg, color: bg === '#f5f6fa' ? '#222' : '#f5f6fa'}} className=\"button fs-2 d-block mx-auto my-auto\">\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nexport default function index(props) {\r\n    const {bg, children, func} = props;\r\n    return (\r\n        <button onClick={func} style={{backgroundColor: bg, color: '#222'}} className=\"long-button fs-2 d-block mx-auto my-auto\">\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport Output from '../Output'\r\nimport Button from '../Button'\r\nimport LongButton from '../LongButton'\r\nimport './index.scss'\r\n\r\nexport default function Panel() {\r\n    const [bg, setBg] = useState({\r\n        red: '#c23616',\r\n        white: '#f5f6fa',\r\n        gray: '#718093'\r\n    });\r\n\r\n    //view\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    //control store\r\n    const [point, setPoint] = useState('none');\r\n    const [store, setStore] = useState('0');\r\n    //control calculate\r\n    const [queue, setQueue] = useState([]);\r\n\r\n    //effects\r\n    useEffect(()=>{\r\n        const leng = queue.length;\r\n\r\n        if(leng === 2 && queue[leng - 1] === '=') {\r\n            setIsUpdate(true);\r\n        }\r\n\r\n        if(leng > 3) {\r\n            const num1 = queue[0],\r\n                  num2 = queue[2],\r\n                  sign = queue[1];\r\n            const sum = cal(num1, num2, sign);\r\n            setQueue([...[sum], queue[3]]);\r\n            setIsUpdate(false);\r\n        }\r\n\r\n        // console.log(queue);\r\n\r\n    }, [queue]);\r\n\r\n    const cal = (num1, num2, sign) => {\r\n        switch(sign) {\r\n            case '+':\r\n                return num1 + num2;\r\n            case '-':\r\n                return num1 - num2;\r\n            case '*':\r\n                return num1 * num2;\r\n            case '/':\r\n                return num1 / num2;\r\n            default:\r\n                return num1;\r\n        }\r\n    }\r\n\r\n    const psuhQueue = (sign) => {\r\n        return () => {\r\n            setQueue([...queue, Number(store), sign]);\r\n            setPoint('none');\r\n            setStore('0');\r\n        }\r\n    }\r\n    \r\n    const updateStore = (num) => {\r\n        return () => {\r\n            if(queue[1] === '=' && num !== 'AC') return;\r\n\r\n            setIsUpdate(false);\r\n            switch(num) {\r\n                case 'AC':\r\n                    setStore('0');\r\n                    setQueue([]);\r\n                    setPoint('none');\r\n                    return;\r\n                case '%':\r\n                    const newItem = Number(store)/100;\r\n                    setStore(newItem.toString());\r\n                    return;\r\n                case '+/-':\r\n                    const positive = Number(store) > 0;\r\n                    const zero = Number(store) === 0;\r\n\r\n                    if(zero) return;\r\n\r\n                    if(positive) {\r\n                        const newItem = 0 - Number(store)\r\n                        setStore(newItem.toString());\r\n                    } else {\r\n                        const newItem = Math.abs(Number(store));\r\n                        setStore(newItem.toString());\r\n                    };\r\n                    return;\r\n                case '.':\r\n                    if(point === 'none') {\r\n                        setPoint('have');\r\n                    }\r\n                    return;\r\n                default:     \r\n                    if(store === '0') {\r\n                        if(point === 'have') {\r\n                            setStore(`0.${num}`);\r\n                            setPoint('finish');\r\n                        } else {\r\n                            setStore(num);\r\n                        }\r\n                    } else {\r\n                        if(point === 'have') {\r\n                            setStore(`${store}.${num}`);\r\n                            setPoint('finish');\r\n                        } else {\r\n                            setStore(`${store}${num}`);\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"panel mx-auto p-3\">\r\n            <Output isUpdate={isUpdate} currentSum={queue[0]} store={store} />\r\n            <div className=\"buttons-area pt-3\">\r\n                <div className=\"row g-0\">\r\n                    {/* Numbers & Others */}\r\n                    <div className=\"col-9\">\r\n                        {/* AC , positive/negative, percent */}\r\n                        <div className=\"row g-0 pt-3\">\r\n                            <div className=\"col\"><Button func={updateStore('AC')} bg={bg.gray}>AC</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('+/-')} bg={bg.gray}>+/-</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('%')} bg={bg.gray}>%</Button></div>\r\n                        </div>\r\n                        {/* Numbers */}\r\n                        <div className=\"row g-0 pt-3\">\r\n                            <div className=\"col\"><Button func={updateStore('7')}  bg={bg.white}>7</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('8')}  bg={bg.white}>8</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('9')}  bg={bg.white}>9</Button></div>\r\n                        </div>\r\n                        <div className=\"row g-0 pt-3\">\r\n                            <div className=\"col\"><Button func={updateStore('4')} bg={bg.white}>4</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('5')} bg={bg.white}>5</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('6')} bg={bg.white}>6</Button></div>\r\n                        </div>\r\n                        <div className=\"row g-0 pt-3\">\r\n                            <div className=\"col\"><Button func={updateStore('1')} bg={bg.white}>1</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('2')} bg={bg.white}>2</Button></div>\r\n                            <div className=\"col\"><Button func={updateStore('3')} bg={bg.white}>3</Button></div>\r\n                        </div>\r\n                        <div className=\"row g-0 pt-3\">\r\n                            <div className=\"col-8\"><LongButton func={updateStore('0')} bg={bg.white}>0</LongButton></div>\r\n                            <div className=\"col-4\"><Button func={updateStore('.')} bg={bg.white}>.</Button></div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Control section */}\r\n                    <div className=\"col-3\">\r\n                        <div className=\"row flex-column\">\r\n                            <div className=\"col pt-3\"><Button func={psuhQueue('/')} bg={bg.red}>÷</Button></div>\r\n                            <div className=\"col pt-3\"><Button func={psuhQueue('*')} bg={bg.red}>×</Button></div>\r\n                            <div className=\"col pt-3\"><Button func={psuhQueue('-')} bg={bg.red}>-</Button></div>\r\n                            <div className=\"col pt-3\"><Button func={psuhQueue('+')} bg={bg.red}>+</Button></div>\r\n                            <div className=\"col pt-3\"><Button func={psuhQueue('=')} bg={bg.red}>=</Button></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport './index.scss'\r\n\r\nconst buildBoxList = (total, width, height) => {\r\n    const bg = ['#c23616', '#f5f6fa', '#718093'];\r\n    let list = [];\r\n    for(let i = 0; i < total; i ++) {\r\n        const data = {\r\n            color: bg[Math.floor(Math.random() * 3)],\r\n            scale: Math.floor(Math.random() * 3),\r\n            posX: Math.floor(Math.random() * width),\r\n            posY: Math.floor(Math.random() * height)\r\n        }\r\n        list.push(data);\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nexport default function Background() {\r\n\r\n    const wraper = useRef();\r\n    const [boxes, setBoxes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //initialize boxes\r\n        const { clientHeight, clientWidth } = wraper.current;\r\n        const total = clientWidth < 768 ? (clientWidth < 450 ? 10 : 20) : 30;\r\n        const boxList = buildBoxList(total, clientWidth, clientHeight);\r\n        setBoxes(boxList);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div ref={wraper} className=\"background\">\r\n            {\r\n                boxes.map(el => {\r\n                    return (\r\n                        <div style={{backgroundColor: el.color, transform: `scale(${el.scale})`, left: el.posX, top: el.posY}} className=\"box\"></div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\nimport Panel from './components/Panel'\nimport Background from './components/Background'\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Background />\n      <div className=\"container h-100 d-flex align-items-center\">\n        <Panel />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}